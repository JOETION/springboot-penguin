<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.qexz.dao.ReplyMapper">
    <resultMap id="BaseResultMap" type="com.qexz.model.Reply">
        <id column="id" property="id" jdbcType="INTEGER"/>
        <result column="user_id" property="userId" jdbcType="INTEGER"/>
        <result column="atuser_id" property="atuserId" jdbcType="INTEGER"/>
        <result column="post_id" property="postId" jdbcType="INTEGER"/>
        <result column="comment_id" property="commentId" jdbcType="INTEGER"/>
        <result column="content" property="content" jdbcType="VARCHAR"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
    </resultMap>
    <sql id="Base_Column_List">
        id,user_id,atuser_id,post_id,comment_id,content,create_time
    </sql>

    <insert id="insertReply" parameterType="com.qexz.model.Reply">
        insert into t_penguin_reply
        (user_id, atuser_id, post_id, comment_id, content)
        values (#{reply.userId}, #{reply.atuserId},
        #{reply.postId}, #{reply.commentId}, #{reply.content})
    </insert>

    <select id="getReliesByPostId" resultMap="BaseResultMap">
        SELECT
        *
        FROM t_penguin_reply
        WHERE post_id = #{postId} AND deleted=0
        ORDER BY create_time ASC
    </select>

    <update id="deleteRepliesByPostId" parameterType="int">
        UPDATE t_penguin_reply
        SET deleted=1
        WHERE post_id=#{postId}
    </update>

    <update id="deleteRepliesByCommentId" parameterType="int">
        UPDATE t_penguin_reply
        SET deleted=1
        WHERE comment_id=#{commentId}
    </update>

    <update id="deleteReplyById" parameterType="int">
        UPDATE t_penguin_reply
        SET deleted=1
        WHERE id=#{id}
    </update>

    <select id="getRepliesByIds" resultMap="BaseResultMap">
        SELECT * FROM t_penguin_reply
        WHERE 1=1
        <if test="ids != null and ids.size > 0">
            AND id IN
            <foreach collection="ids" item="id1" open="(" separator="," close=")">
                #{id1}
            </foreach>
        </if>
    </select>

    <select id="getReplyById" resultMap="BaseResultMap">
        SELECT * FROM t_penguin_reply
        WHERE id=#{id}
    </select>

</mapper>